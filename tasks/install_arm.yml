
- name: Copy Ansible RM helm values
  template: 
    src: values.yaml
    dest: /tmp/ansiblerm-values.yaml
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}" 

- name: Install Ansible RM Helm Charts
  command: "helm install {{ helm_inst_arm_chart }} --name ansiblerm -f /tmp/ansiblerm-values.yaml {% if docker_registry_values_path is defined %}-f {{ docker_registry_values_path }}{% endif %}"

- name: Gather Ansible RM Https Port
  shell: "kubectl describe service osslm-ansible-rm | grep https | grep NodePort | awk '{print $3}'"
  register: gather_ansible_rm_port_result

- name: Determine Ansible RM Port
  set_fact:
    arm_port: "{% if arm_secure|default(False)|bool == True %}{{ gather_ansible_rm_port_result.stdout | replace('/TCP', '') }}{% else %}31081{% endif %}"

- name: Determine Ansible RM address
  set_fact: 
    arm_addr: "{% if arm_secure|default(False)|bool == True %}https{% else %}http{% endif %}://{{ advertise_address if advertise_address is defined else hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{arm_port}}"

- name: Wait for Ansible RM to be ready
  uri:
    url: "{{ arm_addr }}/api/v1.0/resource-manager/ui/"
    validate_certs: false
    status_code: 200
  register: result
  until: result.status == 200
  retries: 100
  delay: 20

- name: Init the Ansible RM database
  uri:
    url: "{{ arm_addr }}/api/v1.0/resource-manager/database"
    method: POST
    validate_certs: false
